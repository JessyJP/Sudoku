from  sudoku_lib import * 
## =========================================================================
#  Run example

test_board = [
    ["5","3",".",".","7",".",".",".","."],
    ["6",".",".","1","9","5",".",".","."],
    [".","9","8",".",".",".",".","6","."],
    ["8",".",".",".","6",".",".",".","3"],
    ["4",".",".","8",".","3",".",".","1"],
    ["7",".",".",".","2",".",".",".","6"],
    [".","6",".",".",".",".","2","8","."],
    [".",".",".","4","1","9",".",".","5"],
    [".",".",".",".","8",".",".","7","9"]
]

N = len(test_board); g = int(np.sqrt(N));

solved_sudoku_board2 = [
    ["5","3","4","6","7","8","9","1","2"],
    ["6","7","2","1","9","5","3","4","8"],
    ["1","9","8","3","4","2","5","6","7"],
    ["8","5","9","7","6","1","4","2","3"],
    ["4","2","6","8","5","3","7","9","1"],
    ["7","1","3","9","2","4","8","5","6"],
    ["9","6","1","5","3","7","2","8","4"],
    ["2","8","7","4","1","9","6","3","5"],
    ["3","4","5","2","8","6","1","7","9"]
]


B = convert_to_int_board(test_board)
print_boardState(B,'.',True)
print(count_non_zero(B)/(N**2))



S = InitializeSolutionSpace(B,dispSolutionState=False)
print_boardState(B,'.',True)
print_solutionSpace(S,' ',True, False)
B = solve(B,S,dispBoard=True)
print_boardState(B,'.',True)
# print_solutionSpace(S,' ',True, False)

compare_boards(convert_to_int_board(solved_sudoku_board2), B)
